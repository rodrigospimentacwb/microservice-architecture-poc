spring.application.name=account-microservice

# Expor metricas

management.endpoints.web.exposure.include=health,info,metrics
# Ajuste de amostragem do OpenTelemetry
management.tracing.sampling.probability=1.0
# Tempo de cada coleta
# management.metrics.export.otlp.step=2s

# Configurar o OpenTelemetry para exportar via OTLP

otel.exporter.otlp.endpoint=http://localhost:4317
otel.exporter.otlp.protocol=grpc
# Logs sao exportados pelo filebeat para evitar usar o Logstash como sender
otel.logs.exporter=none

# Jpa

spring.datasource.url=${POSTGRESQL_URL}
spring.datasource.username=${POSTGRESQL_USER}
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.default_schema=${POSTGRESQL_SCHEMA}

# Logs para requests

logging.level.org.springframework.web=WARN
logging.level.org.springframework.web.servlet.DispatcherServlet=WARN
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# Habilita o Logbook
logging.level.org.zalando.logbook=TRACE
logbook.filter.enabled=true
logbook.format.style=json
logbook.obfuscate.headers.Authorization=true
logbook.obfuscate.headers.Password=true
logbook.include.headers=Content-Type,Authorization,X-Trace-Id
logbook.include.body=true
logbook.json.pretty=false
